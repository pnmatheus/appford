import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

class Post {
  Post({
    this.postClass,
  });

  String postClass;

  factory Post.fromJson(Map<String, dynamic> json) => Post(
        postClass: json["class"],
      );

  Map<String, dynamic> toJson() => {
        "class": postClass,
      };
}

Future<Post> fetchPost() async {
  String url =
      "https://firebasestorage.googleapis.com/v0/b/ford-project-9ccb2.appspot.com/o/pictures%2Ftemp_motor6.jpeg?alt=media&token=ff8cb74b-711d-46a1-8109-f0500c0334a1";
  final http.Response response = await http.post(
    'http://192.168.1.164:8080/',
    headers: <String, String>{
      'Content-Type': 'application/json; charset=UTF-8',
    },
    body: jsonEncode(<String, String>{
      'url': url,
    }),
  );
  if (response.statusCode == 200) {
    // se o servidor retornar um response OK, vamos fazer o parse no JSON
    return Post.fromJson(json.decode(response.body));
  } else {
    // se a responsta não for OK , lançamos um erro
    throw Exception('Failed to load post');
  }
}

void main() => runApp(MyApp(post: fetchPost()));

class MyApp extends StatelessWidget {
  final Future<Post> post;
  String url =
      "https://firebasestorage.googleapis.com/v0/b/ford-project-9ccb2.appspot.com/o/pictures%2Ftemp_motor6.jpeg?alt=media&token=ff8cb74b-711d-46a1-8109-f0500c0334a1";
  MyApp({Key key, this.post}) : super(key: key);
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Obtendo dados da Web - Exemplo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: Scaffold(
        appBar: AppBar(
          title: Text('Pegando dados da Web'),
        ),
        body: Center(
          child: FutureBuilder<Post>(
            future: post,
            builder: (context, snapshot) {
              if (snapshot.hasData) {
                return Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: Text(snapshot.data.postClass),
                );
              } else if (snapshot.hasError) {
                return Text("${snapshot.error}");
              }
              return CircularProgressIndicator();
            },
          ),
        ),
      ),
    );
  }
}
